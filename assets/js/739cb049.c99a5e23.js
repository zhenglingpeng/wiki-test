"use strict";(self.webpackChunkclassic=self.webpackChunkclassic||[]).push([[2894],{89292:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>p,frontMatter:()=>d,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"NeoEdge NG4500 Series/NG4500-CB01 Development Board/Dev Guide","title":"Dev Guide","description":"Development Kit Overview","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/1-NeoEdge NG4500 Series/2-NG4500-CB01 Development Board/0-Dev Guide.md","sourceDirName":"1-NeoEdge NG4500 Series/2-NG4500-CB01 Development Board","slug":"/NeoEdge NG4500 Series/NG4500-CB01 Development Board/Dev Guide","permalink":"/wiki-documents/docs/NeoEdge NG4500 Series/NG4500-CB01 Development Board/Dev Guide","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":0,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"Quick Start","permalink":"/wiki-documents/docs/NeoEdge NG4500 Series/Quick Start"},"next":{"title":"Components Overview","permalink":"/wiki-documents/docs/NeoEdge NG4500 Series/NG4500-CB01 Development Board/Hardware Guide/Components Overview"}}');var r=i(74848),t=i(28453),o=(i(28774),i(86025));const d={},l=void 0,c={},a=[{value:"Development Kit Overview",id:"development-kit-overview",level:2},{value:"Key Features",id:"key-features",level:2},{value:"Specifications",id:"specifications",level:2},{value:"Development Resources",id:"development-resources",level:2},{value:"Hardware Resources",id:"hardware-resources",level:3},{value:"Software Resources",id:"software-resources",level:3},{value:"Application Development",id:"application-development",level:3},{value:"Development Process",id:"development-process",level:2},{value:"Quick Start",id:"quick-start",level:2},{value:"Technical Support and Resource",id:"technical-support-and-resource",level:2}];function h(e){const n={a:"a",h2:"h2",h3:"h3",hr:"hr",li:"li",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"development-kit-overview",children:"Development Kit Overview"}),"\n",(0,r.jsx)(n.p,{children:"NG4500-CB01 is a high-performance development carrier board designed for NeoEdge NG4500 series AI edge computing devices. This carrier board is suitable for NVIDIA Jetson Orin series modules (Orin Nano/NX) and is suitable for application scenarios such as machine vision, industrial automation, robotics, and AIoT."}),"\n",(0,r.jsxs)("div",{style:{display:"grid",gridTemplateColumns:"1fr 1fr",gap:"20px",justifyContent:"center",alignItems:"center"},children:[(0,r.jsx)("img",{src:(0,o.Ay)("/img/Board/NG4500-CB01_1.png"),alt:"front view of the carrier board",style:{height:"300px",objectFit:"contain",margin:"0 auto"}}),(0,r.jsx)("img",{src:(0,o.Ay)("/img/Board/NG4500-CB01_2.png"),alt:"back view of the carrier board",style:{height:"300px",objectFit:"contain",margin:"0 auto"}})]}),"\n",(0,r.jsx)(n.h2,{id:"key-features",children:"Key Features"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Compatible with NVIDIA\xae Jetson Orin\u2122  series modules"}),": supporting Jetson Orin Nano 4GB/8GB and Orin NX 8GB/16GB"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Rich interfaces"}),":","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Dual Gigabit Ethernet ports"}),"\n",(0,r.jsx)(n.li,{children:"4\xd7Type-A (USB 3.1) and 1\xd7Type-C (USB 3.2)"}),"\n",(0,r.jsx)(n.li,{children:"RS232, RS485, CANbus"}),"\n",(0,r.jsx)(n.li,{children:"Digital input/output interfaces (DI/DO)"}),"\n",(0,r.jsx)(n.li,{children:"HDMI 4K video output"}),"\n",(0,r.jsx)(n.li,{children:"Audio input and output interfaces"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Expansion capabilities"}),"\uff1a","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"M.2 Key M PCIe 4.0 NVMe SSD interface\uff082280 spec.\uff09"}),"\n",(0,r.jsx)(n.li,{children:"M.2 Key M PCIe 1.0 expansion interface"}),"\n",(0,r.jsx)(n.li,{children:"M.2 Key B interface supports 4G/5G/Wi-Fi Halow\uff082242/2252 spec.\uff09"}),"\n",(0,r.jsx)(n.li,{children:"M.2 Key E interface supports Wi-Fi 6/Bluetooth 5.0\uff082230 spec.\uff09"}),"\n",(0,r.jsx)(n.li,{children:"4 lanes MIPI\xd72 camera interface"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.strong,{children:"Industrial-grade design"}),": wide voltage input(12V-36V DC), fanless passive cooling design, operating temperature ranges from -25\xb0C to 60\xb0C."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"specifications",children:"Specifications"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Category"}),(0,r.jsx)(n.th,{children:"Specifications"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Compatible modules"}),(0,r.jsx)(n.td,{children:"Jetson Orin Nano 4GB/8GB, Jetson Orin NX 8GB/16GB"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"CPU"}),(0,r.jsx)(n.td,{children:"6/8 core Arm\xae Cortex\xae A78AE v8.2 (64-bit)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"GPU"}),(0,r.jsx)(n.td,{children:"512/1024 NVIDIA\xae CUDA\xae cores\uff0c16/32 Tensor cores"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"AI performance"}),(0,r.jsx)(n.td,{children:"Up to 157 INT8 TOPS\uff08SUPER mode\uff09"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Memory"}),(0,r.jsx)(n.td,{children:"4GB/8GB/16GB LPDDR5"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Storage expansion"}),(0,r.jsx)(n.td,{children:"Supports NVMe SSD(2280), pre-install 128GB-1TB"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Ethernet"}),(0,r.jsx)(n.td,{children:"Gigabit Ethernet with 2\xd7RJ45 connectors"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Wireless Connectivity"}),(0,r.jsx)(n.td,{children:"Wi-Fi 6/Bluetooth 5.0\uff0c4G/5G/Wi-Fi Halow"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Video"}),(0,r.jsx)(n.td,{children:"HDMI output, 2\xd7MIPI CSI(Camera Serial Interface)"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Serial interface"}),(0,r.jsx)(n.td,{children:"RS232, RS485, CAN"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Power input"}),(0,r.jsx)(n.td,{children:"DC 12V-36V, peak rate 120W"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Dimension"}),(0,r.jsx)(n.td,{children:"160mm \xd7 125mm \xd7 75mm\uff08Edge AI Box\uff09"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:"Operating system"}),(0,r.jsx)(n.td,{children:"Ubuntu Linux\uff08JetPack 6.0+\uff09"})]})]})]}),"\n",(0,r.jsx)(n.h2,{id:"development-resources",children:"Development Resources"}),"\n",(0,r.jsx)(n.p,{children:"NG4500-CB01 carrier board provides comprehensive development resources and documentation support. The following are links to relevant development resources:"}),"\n",(0,r.jsx)(n.h3,{id:"hardware-resources",children:"Hardware Resources"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/wiki-documents/docs/NeoEdge%20NG4500%20Series/NG4500-CB01%20Development%20Board/Hardware%20Guide/Components%20Overview",children:"Hardware components overview"})," - Detailed introduction to the functions and specifications of each component of the development board."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/wiki-documents/docs/NeoEdge%20NG4500%20Series/NG4500-CB01%20Development%20Board/Hardware%20Guide/Hardware%20Connection",children:"Hardware connection guide"})," - Explanation on how to use and connect the interfaces on the carrier board."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"software-resources",children:"Software Resources"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/wiki-documents/docs/NeoEdge%20NG4500%20Series/NG4500-CB01%20Development%20Board/Software%20Guide/System%20Flashing%20and%20Initialization",children:"System Flashing Guide"})," - Provides step-by-step instruction for flashing the Jetson module system."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/wiki-documents/docs/NeoEdge%20NG4500%20Series/NG4500-CB01%20Development%20Board/Software%20Guide/Development%20Environment%20Setup",children:"Development Environment Set-up"})," - Guides on how to configure the development environment and development tools."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/wiki-documents/docs/NeoEdge%20NG4500%20Series/NG4500-CB01%20Development%20Board/Software%20Guide/Driver%20Installation%20and%20Updates/Interface&modules%20configure",children:"Driver Installation and Update"})," - Contains driver installation instructions for various hardware interfaces."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/wiki-documents/docs/NeoEdge%20NG4500%20Series/NG4500-CB01%20Development%20Board/Software%20Guide/Software%20Frameworks%20and%20Tools/Docker",children:"Software Framework and Tools"})," - List of supported development frameworks and tools."]}),"\n"]}),"\n",(0,r.jsx)(n.h3,{id:"application-development",children:"Application Development"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/wiki-documents/docs/NeoEdge%20NG4500%20Series/Application%20Guide/Deepseek-r1",children:"DeepSeek LLM Deployment"})," - Tutorial guide of deploying LLMs on NG4500"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/wiki-documents/docs/NeoEdge%20NG4500%20Series/Application%20Guide/mediapipe",children:"MediaPipe Framework Deployment"})," - Example of using MediaPipe to develop visual-related applications."]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"/wiki-documents/docs/NeoEdge%20NG4500%20Series/Application%20Guide/Object%20Detection",children:"Object Detection Application"})," - Object detection application developed based on TensorRT."]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"development-process",children:"Development Process"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Hardware preparation"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Install the Jetson Orin module to the development board"}),"\n",(0,r.jsx)(n.li,{children:"Connect power and peripherals (monitor, keyboard, mouse)"}),"\n",(0,r.jsx)(n.li,{children:"Install expansion modules (storage, communication modules, etc.) as needed"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"System initialization"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Flash JetPack OS"}),"\n",(0,r.jsx)(n.li,{children:"Complete system initial setup"}),"\n",(0,r.jsx)(n.li,{children:"Install necessary drivers and updates"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Development environment configuration"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Install development tools such as CUDA, cuDNN, TensorRT"}),"\n",(0,r.jsx)(n.li,{children:"Configure development framework (PyTorch, TensorFlow etc.)"}),"\n",(0,r.jsx)(n.li,{children:"Set up the IDE and development toolchain"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Application development and testing"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Develop AI applications"}),"\n",(0,r.jsx)(n.li,{children:"Monitor system resources with JetsonStats"}),"\n",(0,r.jsx)(n.li,{children:"Optimize performance and power consumption"}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.strong,{children:"Deployment and optimization"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Application packaging and system integration"}),"\n",(0,r.jsx)(n.li,{children:"Performance tuning and stability testing"}),"\n",(0,r.jsx)(n.li,{children:"Industrial environment adaptation and testing"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h2,{id:"quick-start",children:"Quick Start"}),"\n",(0,r.jsxs)(n.p,{children:["New users can refer to ",(0,r.jsx)(n.a,{href:"/wiki-documents/docs/NeoEdge%20NG4500%20Series/Quick%20Start",children:"Quick Start Guide"})," to quickly understand and get started with the NG4500 edge AI box. This guide will help you with the initial setup and guide you through the initial configuration of your system."]}),"\n",(0,r.jsx)(n.h2,{id:"technical-support-and-resource",children:"Technical Support and Resource"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://forums.developer.nvidia.com/c/agx-autonomous-machines/jetson-embedded-systems/70",children:"NVIDIA Jetson developer community"})," - NVIDIA\xae official technical support and forum"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://docs.nvidia.com/jetson/l4t/",children:"Jetson Linux API reference"})," - Jetson Linux reference document for development"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://developer.nvidia.com/embedded/jetson-orin-nano-devkit",children:"Jetson Orin dev kit document"})," - NVIDIA\xae official dev kit document"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://catalog.ngc.nvidia.com/",children:"NVIDIA NGC contents"})," - NVIDIA\xae pre-train models and containers"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.a,{href:"https://github.com/dusty-nv/jetson-inference",children:"Jetson community project"})," - Jetson platform open-source projects and examples"]}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"For further technical support, please contact our technical support team."}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsxs)(n.p,{children:["For complete product information please see ",(0,r.jsx)(n.a,{href:"/wiki-documents/docs/NeoEdge%20NG4500%20Series/Overview",children:"NG4500 series product overview"}),"."]})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>o,x:()=>d});var s=i(96540);const r={},t=s.createContext(r);function o(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),s.createElement(t.Provider,{value:n},e.children)}}}]);