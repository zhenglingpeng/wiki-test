"use strict";(self.webpackChunkclassic=self.webpackChunkclassic||[]).push([[4041],{43821:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>h,frontMatter:()=>t,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"NeoEdge NG4500 Series/NG4500-CB01 Development Board/Software Guide/Driver Installation and Updates/ov5647","title":"OV5647 Camera Module Adaptation Guide","description":"This guide uses the OV5647 camera module as an example to detail the development and adaptation process on the NG4520 platform, covering hardware preparation, device tree configuration, driver compilation, system loading, and debugging steps.","source":"@site/i18n/en/docusaurus-plugin-content-docs/current/1-NeoEdge NG4500 Series/2-NG4500-CB01 Development Board/2-Software Guide/1-Driver Installation and Updates/3-ov5647.md","sourceDirName":"1-NeoEdge NG4500 Series/2-NG4500-CB01 Development Board/2-Software Guide/1-Driver Installation and Updates","slug":"/NeoEdge NG4500 Series/NG4500-CB01 Development Board/Software Guide/Driver Installation and Updates/ov5647","permalink":"/wiki-documents/docs/NeoEdge NG4500 Series/NG4500-CB01 Development Board/Software Guide/Driver Installation and Updates/ov5647","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":3,"frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"WIFI","permalink":"/wiki-documents/docs/NeoEdge NG4500 Series/NG4500-CB01 Development Board/Software Guide/Driver Installation and Updates/wifi"},"next":{"title":"Audio Adaptation Guide (ALC5640 Example)","permalink":"/wiki-documents/docs/NeoEdge NG4500 Series/NG4500-CB01 Development Board/Software Guide/Driver Installation and Updates/ALC5640"}}');var s=r(74848),d=r(28453);const t={},o="OV5647 Camera Module Adaptation Guide",a={},l=[{value:"Terms and Explanations",id:"terms-and-explanations",level:2},{value:"OV5647 Driver Configuration Process",id:"ov5647-driver-configuration-process",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"To add camera modules to a device tree",id:"to-add-camera-modules-to-a-device-tree",level:3},{value:"Building Driver",id:"building-driver",level:3},{value:"Driver Installation and Loading",id:"driver-installation-and-loading",level:3},{value:"Verification Process",id:"verification-process",level:2},{value:"References",id:"references",level:2}];function c(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,d.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"ov5647-camera-module-adaptation-guide",children:"OV5647 Camera Module Adaptation Guide"})}),"\n",(0,s.jsx)(n.p,{children:"This guide uses the OV5647 camera module as an example to detail the development and adaptation process on the NG4520 platform, covering hardware preparation, device tree configuration, driver compilation, system loading, and debugging steps."}),"\n",(0,s.jsx)(n.h2,{id:"terms-and-explanations",children:"Terms and Explanations"}),"\n",(0,s.jsxs)(n.table,{children:[(0,s.jsx)(n.thead,{children:(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.th,{children:"Terms"}),(0,s.jsx)(n.th,{children:"Explanations"})]})}),(0,s.jsxs)(n.tbody,{children:[(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"ISP"}),(0,s.jsx)(n.td,{children:"Converts raw sensor data into usable images, handling demosaicing, noise reduction, exposure, focus, and white balance."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Bayer"}),(0,s.jsx)(n.td,{children:"Bayer sensors uses alternating red, green, and blue filters over photosites, with green taking half, to capture color images."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"CSI"}),(0,s.jsx)(n.td,{children:"High-speed serial interface for transferring image data between sensors and processors."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"V4L2"}),(0,s.jsx)(n.td,{children:"Linux kernel driver interface for video capture and output devices."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"libargus"}),(0,s.jsx)(n.td,{children:"NVIDIA API for acquiring camera images and metadata."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Camera Core Library"}),(0,s.jsx)(n.td,{children:"Provides controls and processing between user applications and V4L2 drivers."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"GStreamer"}),(0,s.jsx)(n.td,{children:"Multimedia framework supporting playback and advanced audio/video processing."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Host1x"}),(0,s.jsx)(n.td,{children:"Tegra DMA engine managing graphics/multimedia register access and sync via client FIFOs."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"Aperture"}),(0,s.jsx)(n.td,{children:"Controls the size of the lens opening."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"UVC"}),(0,s.jsx)(n.td,{children:"USB video devices with standard streaming functions that connect directly to hosts."})]}),(0,s.jsxs)(n.tr,{children:[(0,s.jsx)(n.td,{children:"VI"}),(0,s.jsx)(n.td,{children:"Transfers video data from an input device."})]})]})]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Software Driver Architecture"})}),"\n",(0,s.jsx)(n.p,{children:"The NVIDIA platform supports two types of camera driver architectures\uff1a"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Camera Core Library Interface"}),"\uff1a Enables access to the ISP and advanced image processing. Applications interact through the libargus API (e.g., the nvgstcapture-1.0 tool)."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.strong,{children:"Direct V4L2 Interface"}),"\uff1aDirectly uses the V4L2 driver without the NVIDIA ISP."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"It is recommended to use the Camera Core Library Interface to fully leverage the capabilities of the NVIDIA ISP."})}),"\n",(0,s.jsx)(n.h2,{id:"ov5647-driver-configuration-process",children:"OV5647 Driver Configuration Process"}),"\n",(0,s.jsx)(n.h3,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"To find the I2C address and pinout of a camera module\uff0cverify the Power-Down (PWDN) and RESET pins."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Obtain the device\u2019s power-up sequence, external clock parameters, supported resolutions and frame rates, and the color filter array type\uff08BGGR/GBRG/GRBG/RGGB\uff09."}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Confirm the connection interface and the corresponding ",(0,s.jsx)(n.code,{children:"\xa0tegra_sinterface "}),"\xa0mapping (for example, on the NG452X platform, cam0 = serial_c)."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"This example is based on Jetson Orin NX, with cam0 as the hardware connection interface."})}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"to-add-camera-modules-to-a-device-tree",children:"To add camera modules to a device tree"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Locate or create a tegra-camera-platform device tree node in the kernel source tree at:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"Linux_for_Tegra/source/hardware/nvidia/t23x/nv-public/overlay/tegra234-p3767-camera-p3768-ov5647.dts`\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Configure the ",(0,s.jsx)(n.code,{children:"\xa0tegra-camera-platform "}),"\xa0node, including video stream ports and connection relationships. For example\uff1a"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-nand2tetris-hdl",children:"tegra-capture-vi  {\r\n    num-channels = <1>;\r\n    ports {\r\n        #address-cells = <1>;\r\n        #size-cells = <0>;\r\n        vi_port1: port@1 {\r\n            reg = <0>;\r\n            rbpcv2_ov5647_vi_in1: endpoint {\r\n                port-index = <2>;\r\n                bus-width = <2>;\r\n                remote-endpoint = <&rbpcv2_ov5647_csi_out1>;\r\n            };\r\n        };\r\n    };\r\n};\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"I2C Device Node Configuration"}),"\n",(0,s.jsx)(n.p,{children:"Configure camera parameters (I2C address, modes, clock, resolution, etc.)\uff1a"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-nand2tetris-hdl",children:'rbpcv2_ov5647_c@36 {\r\n    reset-gpios = <&gpio CAM0_RST GPIO_ACTIVE_HIGH>;\r\n    pwdn-gpios = <&gpio CAM1_PWDN GPIO_ACTIVE_HIGH>;\r\n    compatible = "ovti,ov5647";\r\n    /* I2C device address */\r\n    reg = <0x36>;\r\n    /* V4L2 device node loation */\r\n    devnode = "video0";\r\n    /* Physical dimensions of sensor */\r\n    physical_w = "3.670";\r\n    physical_h = "2.740";\r\n    sensor_model = "ov5647";\r\n    use_sensor_mode_id = "true";\r\n\r\n    clocks = <&bpmp TEGRA234_CLK_EXTPERIPH2>,\r\n            <&bpmp TEGRA234_CLK_PLLP_OUT0>;\r\n    clock-names = "extperiph2", "pllp_grtba";\r\n    mclk = "extperiph2";\r\n    clock-frequency = <24000000>;\r\n\r\n    mode0 { /* ov5647_MODE0_1920x1080_30FPS */\r\n        mclk_khz = "25000";\r\n        num_lanes = "2";\r\n        // lane_polarity = "4";\r\n        tegra_sinterface = "serial_c";\r\n        phy_mode = "DPHY";\r\n        discontinuous_clk = "yes";\r\n        dpcm_enable = "false";\r\n        cil_settletime = "0";\r\n        active_w = "1920";\r\n        active_h = "1080";\r\n        mode_type = "bayer";\r\n        pixel_phase = "bggr";\r\n        csi_pixel_bit_depth = "10";\r\n        readout_orientation = "90";\r\n        line_length = "2416";\r\n        inherent_gain = "1";\r\n        mclk_multiplier = "3.6669";\r\n        pix_clk_hz = "81666663";\r\n        gain_factor = "16";\r\n        framerate_factor = "1000000";\r\n        exposure_factor = "1000000";\r\n        min_gain_val = "16";\r\n        max_gain_val = "128";\r\n        step_gain_val = "1";\r\n        default_gain = "16";\r\n        min_hdr_ratio = "1";\r\n        max_hdr_ratio = "1";\r\n        min_framerate = "30000000"; /* 30.0 fps */\r\n        max_framerate = "30000000"; /* 30.0 fps */\r\n        step_framerate = "1";\r\n        default_framerate = "45000000"; /* 30.0 fps */\r\n        min_exp_time = "60"; /* us */\r\n        max_exp_time = "30000"; /* us */\r\n        step_exp_time = "1";\r\n        default_exp_time = "10000"; /* us */\r\n        embedded_metadata_height = "0";\r\n    };\r\n\r\n    ........................\r\n\r\n    ports {\r\n        #address-cells = <1>;\r\n        #size-cells = <0>;\r\n        port@0 {\r\n            reg = <0>;\r\n            rbpcv2_ov5647_out1: endpoint {\r\n                status = "okay";\r\n                port-index = <1>;\r\n                bus-width = <2>;\r\n                remote-endpoint = <&rbpcv2_ov5647_csi_in1>;\r\n            };\r\n        };\r\n    };\r\n\r\n};\n'})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Port Binding Configuration"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Use",(0,s.jsx)(n.code,{children:"remote-endpoint"}),"\xa0to connect the camera, CSI, and VI modules, ensuring a complete video stream pipeline."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-nand2tetris-hdl",children:"tegra-capture-vi  {\r\n    num-channels = <1>;\r\n    ports {\r\n        #address-cells = <1>;\r\n        #size-cells = <0>;\r\n        vi_port1: port@1 {\r\n            reg = <0>;\r\n            rbpcv2_ov5647_vi_in1: endpoint {\r\n                port-index = <2>;\r\n                bus-width = <2>;\r\n                remote-endpoint = <&rbpcv2_ov5647_csi_out1>;\r\n            };\r\n        };\r\n    };\r\n}; \r\n\r\nhost1x@13e00000 {\r\n    nvcsi@15a00000 {\r\n        num-channels = <1>;\r\n        #address-cells = <1>;\r\n        #size-cells = <0>;\r\n        csi_chan1: channel@1 {\r\n            reg = <0>;\r\n            ports {\r\n                #address-cells = <1>;\r\n                #size-cells = <0>;\r\n                csi_chan1_port0: port@0 {\r\n                    reg = <0>;\r\n                    rbpcv2_ov5647_csi_in1: endpoint@2 {\r\n                        port-index = <2>;\r\n                        bus-width = <2>;\r\n                        remote-endpoint = <&rbpcv2_ov5647_out1>;\r\n                    };\r\n                };\r\n                csi_chan1_port1: port@1 {\r\n                    reg = <1>;\r\n                    rbpcv2_ov5647_csi_out1: endpoint@3 {\r\n                        remote-endpoint = <&rbpcv2_ov5647_vi_in1>;\r\n                    };\r\n                };\r\n            };\r\n        };\r\n    };\r\n};\n"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Overlay Makefile Configuration\uff0cadd the following in\xa0",(0,s.jsx)(n.code,{children:"overlay/Makefile"}),"\uff1a"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"dtbo-y += tegra234-p3767-camera-p3768-ov5647.dtbo\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Build the  dtbo\uff1a"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"make dtbs\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"building-driver",children:"Building Driver"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Add Driver Source Code"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Example pat\uff1a",(0,s.jsx)(n.code,{children:"drivers/media/i2c/ov5647.c"})]}),"\n",(0,s.jsxs)(n.li,{children:["It is recommended to modify it based on\xa0",(0,s.jsx)(n.code,{children:"nv_ov5693.c"}),"\xa0"]}),"\n",(0,s.jsxs)(n.li,{children:["Main functions include\uff1a","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Use",(0,s.jsx)(n.code,{children:"tegracam_device_register"}),"\xa0to register the driver"]}),"\n",(0,s.jsxs)(n.li,{children:["Set up these key function structures\uff1a","\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"tc_dev->sensor_ops"}),"(power on/off, register read/write, mode setting, stream control, etc.)"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"tc_dev->v4l2sd_internal_ops"}),"\uff08e.g., open/s_stream\uff09"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"tc_dev->tcctrl_ops"}),"\uff08gain, exposure, frame rate control, etc.\uff09"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"static struct tegracam_sensor_ops ov5647_sensor_ops = {\r\n    .power_on = ov5647_power_on,\r\n    .power_off = ov5647_power_off,\r\n    .write_reg = ov5647_write_reg,\r\n    .read_reg = ov5647_read_reg,\r\n    .set_mode = ov5647_set_mode,\r\n    .start_streaming = ov5647_start_streaming,\r\n    .stop_streaming = ov5647_stop_streaming,\r\n    .sensor_init = ov5647_sensor_init,\r\n};\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"The implementation of these functions should follow the OV5647 datasheet and related documentation"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Add Register Table Header File"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Example path\uff1a",(0,s.jsx)(n.code,{children:"drivers/media/i2c/ov5647_modes_tbls.h"})]}),"\n",(0,s.jsx)(n.li,{children:"This should include register configuration tables for various resolutions and exposure settings, and keep the same order as defined in the device tree modes."}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-c",children:"static struct v4l2_subdev_internal_ops ov5647_subdev_internal_ops = {\r\n    .open = ov5647_open,\r\n};\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Driver Makefile Configuration\uff0cadd the following line to to\xa0",(0,s.jsx)(n.code,{children:"drivers/media/i2c/Makefile"}),"\xa0to include the OV5647 driver\uff1a"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"obj-m += ov5647.o\n"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Compile the kernel module\uff1a"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-shell",children:"make modules\n"})}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"driver-installation-and-loading",children:"Driver Installation and Loading"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Copy Files"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Copy the generated\xa0",(0,s.jsx)(n.code,{children:".dtbo"}),"\xa0and\xa0",(0,s.jsx)(n.code,{children:"ov5647.ko"}),"\xa0to the target device (for example, NG4520):"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"cd Linux_for_Tegra/source\r\n\r\nscp ./kernel-devicetree/generic-dts/dtbs/tegra234-p3767-camera-p3768-ov5647.dtbo milesight@192.168.60.3:/home/milesight\r\nscp ./kernel-devicetree/generic-dts/dtbs/tegra234-p3767-camera-p3768-ov5647.dtbo milesight@192.168.60.3:/home/milesight\n"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Driver Installation"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Copyov5647.ko to the modules directory and run ",(0,s.jsx)(n.code,{children:"depmod"})," to load the driver:"]}),"\n"]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"sudo cp ./ov5647.ko  /usr/lib/modules/5.15.148-tegra/updates/drivers/media/i2c/\r\n\r\ndepmod\n"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Copy",(0,s.jsx)(n.code,{children:".dtbo"}),"\xa0to\xa0",(0,s.jsx)(n.code,{children:"/boot"}),"\uff0cand load it using the\xa0",(0,s.jsx)(n.code,{children:"config-by-hardware.py"}),"\xa0"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"After completing these steps, reboot the development board."}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"verification-process",children:"Verification Process"}),"\n",(0,s.jsxs)(n.ol,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Check the Device Tree Load"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Check if",(0,s.jsx)(n.code,{children:"extlinux.conf"}),"\xa0has loaded the\xa0",(0,s.jsx)(n.code,{children:".dtbo"}),"\uff1a"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"cat /boot/extlinux/extlinux.conf"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Verify whether the device tree node is effective\uff1a"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"cat /proc/device-tree/tegra-camera-platform/modules/module1/drivernode0/sysfs-device-tree"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Check the Driver Load"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Check the driver module using the following command\uff1a"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"lsmod | grep ov5647 sudo dmesg | grep ov5647"})}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Check I2C device matching using the following command\uff1a"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"sudo i2cdetect -y -r 9"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.strong,{children:"Camera Function Test"})}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsxs)(n.p,{children:["Run\xa0",(0,s.jsx)(n.code,{children:"nvgstcapture-1.0"}),"\uff0cto verify resolution and mode matching, and ensure there are no errors."]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["\n",(0,s.jsx)(n.p,{children:"Check the video stream pipeline using the following command\uff1a"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.code,{children:"sudo media-ctl -p -d /dev/media0"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"references",children:"References"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://docs.nvidia.com/jetson/archives/r36.3/DeveloperGuide/SD/CameraDevelopment/SensorSoftwareDriverProgramming.html",children:"Sensor Software Driver Programming"})}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.a,{href:"https://github.com/mkm684/ov5647_driver/blob/main/ov5647.c",children:"ov5647_driver/ov5647.c at main \xb7 mkm684/ov5647_driver"})}),"\n",(0,s.jsx)(n.hr,{}),"\n",(0,s.jsx)(n.p,{children:"For adapting to other camera models, Please refer to the original vendor datasheet and the NVIDIA official documentation, as the steps are generally similar."})]})}function h(e={}){const{wrapper:n}={...(0,d.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,n,r)=>{r.d(n,{R:()=>t,x:()=>o});var i=r(96540);const s={},d=i.createContext(s);function t(e){const n=i.useContext(d);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),i.createElement(d.Provider,{value:n},e.children)}}}]);